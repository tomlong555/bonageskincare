// <auto-generated />
using System;
using Database.Entitys;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Database.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20231227151344_addTbProductGroupData")]
    partial class addTbProductGroupData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Database.Entitys.TbConfiguration", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("TbConfiguration");
                });

            modelBuilder.Entity("Database.Entitys.TbContent", b =>
                {
                    b.Property<int>("ContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContentId"), 1L, 1);

                    b.Property<string>("ContentBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ContentId");

                    b.ToTable("TbContent");
                });

            modelBuilder.Entity("Database.Entitys.TbFile", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FileId"), 1L, 1);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FileId");

                    b.ToTable("TbFile");
                });

            modelBuilder.Entity("Database.Entitys.TbFileProduct", b =>
                {
                    b.Property<int>("FileProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FileProductId"), 1L, 1);

                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("TbFileFileId")
                        .HasColumnType("int");

                    b.Property<int>("TbProductProductId")
                        .HasColumnType("int");

                    b.HasKey("FileProductId");

                    b.HasIndex("TbFileFileId");

                    b.HasIndex("TbProductProductId");

                    b.ToTable("TbFileProduct");
                });

            modelBuilder.Entity("Database.Entitys.TbProduct", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("ContentBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentHeader")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPromote")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TbProductGroupProductGroupId")
                        .HasColumnType("int");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductId");

                    b.HasIndex("TbProductGroupProductGroupId");

                    b.ToTable("TbProduct");
                });

            modelBuilder.Entity("Database.Entitys.TbProductGroup", b =>
                {
                    b.Property<int>("ProductGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductGroupId"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ProductGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductGroupId");

                    b.ToTable("TbProductGroup");

                    b.HasData(
                        new
                        {
                            ProductGroupId = 1,
                            CreateDate = new DateTime(2023, 12, 27, 15, 13, 44, 322, DateTimeKind.Utc).AddTicks(2600),
                            IsDeleted = false,
                            ProductGroupName = "FLAWLESS CLEANSING"
                        },
                        new
                        {
                            ProductGroupId = 2,
                            CreateDate = new DateTime(2023, 12, 27, 15, 13, 44, 322, DateTimeKind.Utc).AddTicks(2604),
                            IsDeleted = false,
                            ProductGroupName = "CLASSIQUE"
                        },
                        new
                        {
                            ProductGroupId = 3,
                            CreateDate = new DateTime(2023, 12, 27, 15, 13, 44, 322, DateTimeKind.Utc).AddTicks(2604),
                            IsDeleted = false,
                            ProductGroupName = "EYE CARE"
                        },
                        new
                        {
                            ProductGroupId = 4,
                            CreateDate = new DateTime(2023, 12, 27, 15, 13, 44, 322, DateTimeKind.Utc).AddTicks(2605),
                            IsDeleted = false,
                            ProductGroupName = "PRESTIGE"
                        },
                        new
                        {
                            ProductGroupId = 5,
                            CreateDate = new DateTime(2023, 12, 27, 15, 13, 44, 322, DateTimeKind.Utc).AddTicks(2606),
                            IsDeleted = false,
                            ProductGroupName = "LUMIÉRE"
                        },
                        new
                        {
                            ProductGroupId = 6,
                            CreateDate = new DateTime(2023, 12, 27, 15, 13, 44, 322, DateTimeKind.Utc).AddTicks(2606),
                            IsDeleted = false,
                            ProductGroupName = "RÉVIVE"
                        },
                        new
                        {
                            ProductGroupId = 7,
                            CreateDate = new DateTime(2023, 12, 27, 15, 13, 44, 322, DateTimeKind.Utc).AddTicks(2607),
                            IsDeleted = false,
                            ProductGroupName = "GENÉSE"
                        },
                        new
                        {
                            ProductGroupId = 8,
                            CreateDate = new DateTime(2023, 12, 27, 15, 13, 44, 322, DateTimeKind.Utc).AddTicks(2607),
                            IsDeleted = false,
                            ProductGroupName = "BODY CARE"
                        },
                        new
                        {
                            ProductGroupId = 10,
                            CreateDate = new DateTime(2023, 12, 27, 15, 13, 44, 322, DateTimeKind.Utc).AddTicks(2608),
                            IsDeleted = false,
                            ProductGroupName = "HOMME"
                        },
                        new
                        {
                            ProductGroupId = 11,
                            CreateDate = new DateTime(2023, 12, 27, 15, 13, 44, 322, DateTimeKind.Utc).AddTicks(2608),
                            IsDeleted = false,
                            ProductGroupName = "LIMITED EDITION HANDBAGS"
                        },
                        new
                        {
                            ProductGroupId = 12,
                            CreateDate = new DateTime(2023, 12, 27, 15, 13, 44, 322, DateTimeKind.Utc).AddTicks(2609),
                            IsDeleted = false,
                            ProductGroupName = "SETS & GIFTS"
                        });
                });

            modelBuilder.Entity("Database.Entitys.TbUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("TbUser");
                });

            modelBuilder.Entity("Database.Entitys.TbFileProduct", b =>
                {
                    b.HasOne("Database.Entitys.TbFile", "TbFile")
                        .WithMany("TbFileProducts")
                        .HasForeignKey("TbFileFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Entitys.TbProduct", "TbProduct")
                        .WithMany("TbFileProducts")
                        .HasForeignKey("TbProductProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TbFile");

                    b.Navigation("TbProduct");
                });

            modelBuilder.Entity("Database.Entitys.TbProduct", b =>
                {
                    b.HasOne("Database.Entitys.TbProductGroup", "TbProductGroup")
                        .WithMany("TbProducts")
                        .HasForeignKey("TbProductGroupProductGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TbProductGroup");
                });

            modelBuilder.Entity("Database.Entitys.TbFile", b =>
                {
                    b.Navigation("TbFileProducts");
                });

            modelBuilder.Entity("Database.Entitys.TbProduct", b =>
                {
                    b.Navigation("TbFileProducts");
                });

            modelBuilder.Entity("Database.Entitys.TbProductGroup", b =>
                {
                    b.Navigation("TbProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
